#!/bin/bash
#
# Author: iMakhonin aka Makigo
# Email: <work.makhonin@gmail.com>
#
####

NAME="Metarus"
APPNAME="metarus"
AUTHOR="Igor Makhonin"
VERSION="2.0.1"
RELEASE="26.12.2016"
EMAIL="work.makhonin@gmail.com"
W_BASE="NOAA"
NOAAURL="http://tgftp.nws.noaa.gov/data/observations/metar"
STATION="stations"
DECODED="decoded"
TREND="trend"
NOAAURL_NEW="http://weather.noaa.gov/weather/current/"
ERROR="$NAME pattern not found in $W_BASE data."
HELP="echo Используйте помощь: --help"
SORRY="echo -e Извините, но остальные города пока не внесены в базу кодов.\nЕсли вы знаете код города, введите его используя \"$APPNAME -d code\""
NODATA="---"
ZERO="0"


if [ "$1" == "-h" ] || [ "$1" == "--help" ] && [ -z "$2" ]; then
  echo "$NAME v$VERSION, программа получения погодных данных в России по сети."
  echo "Использование: $APPNAME [КЛЮЧ]... [CODE]..."
  echo
  echo "  Использование:"
  echo "  -t,  --temp=code    Только темперетура."
  echo "  -d,  --decode=code  Декодированные данные."
  echo "  -c,  --city=ru      Список доступных городов в соответствии с кодами."
  echo
  echo "       --help         Показать эту справку и выйти."
  echo "       --version      Показать информацию о версии и выйти."
  echo
  echo "  Примеры:"
  echo "  $APPNAME -d uuee     Вывод декодированной информации о погоде в Москве."
  echo "  $APPNAME -c ru       Вывод информации о кодах Российских городов."
  echo
  echo "Об ошибках в «$APPNAME» сообщайте по адресу <$EMAIL>"
  exit 1


elif [ "$1" == "-v" ] || [ "$1" == "--version" ] && [ -z "$2" ]; then
  echo "Версия: $VERSION, дата релиза: $RELEASE"
  exit 1


elif [ "$1" == "-c" ] || [ "$1" == "--city" ] && [ ! -z "$2" ]; then
  if [ "$2" == "ru" ]; then
    printf "RUSSIA: \n"
    printf "UNAA - Abakan\t\t URSS - Adler\t\t UHMA - Anadyr\n"
    printf "URKA - Anapa\t\t ULAA - Arhangel'Sk\t URWA - Astrakhan\n"
    printf "UNBB - Barnaul\t\t UIBB - Irkutsk\t\t UUBP - Brjansk\n"
    printf "USCC - Chelyabinsk\t UIAA - Chita\t\t UELL - Cul'Man\n"
    printf "USSS - Ekaterinburg\t URWI - Elista\t\t UHHH - Habarovsk\n"
    printf "USHH - Hanty-Mansijsk\t UIII - Irkutsk\t\t UEEE - Jakutsk\n"
    printf "UMKK - Kaliningrad\t UWKD - Kazan'\t\t UNEE - Kemerovo\n"
    printf "URKK - Krasnodar\t UHMM - Magadan\t\t URMM - Mineral'Nye Vody\n"
    printf "UERR - Mirny\t\t UUDD - Msk/Domodedovo\t UUEE - Msk/Sheremet'Ye\n"
    printf "UUWW - Moscow/Vnukovo\t ULMM - Murmansk\t URMN - Nalchik\n"
    printf "USNN - Nizhnevartovsk\t UWGG - Nizhny Novgorod\t UNWW - Novokuznetsk\n"
    printf "UNOO - Omsk\t\t UWOO - Orenburg\t UWPP - Penza\n"
    printf "USPP - Perm'\t\t UHPP - Petropavlovsk\t UERP - Polyarny\n"
    printf "URRR - Rostov-Na-Donu\t UWWW - Samara\t\t UWSS - Saratov\n"
    printf "ULLI - St. Peterburg\t URMT - Stavropol\t USRR - Surgut\n"
    printf "UUYY - Syktyvkar\t UEST - Tiksi\t\t UUEM - Tver'\n"
    printf "UWUU - Ufa\t\t UIUU - Ulan-Ude\t UWLW - Ulyanovsk\n"
    printf "ULOL - Velikie Luki\t UHWW - Vladivostok\t URWW - Volgograd\n"
    printf "ULWW - Vologda\t\t UUOO - Voronez\t\t UHSS - Yuzhno-Sakhalinsk\n"
    exit 1
  else
    $SORRY
    exit 1
  fi


elif [ "$1" == "-a" ] || [ "$1" == "--all" ] && [ ! -z "$2" ]; then
  AIRPORT=`echo "$2" | sed 's/[[:lower:]]/\u&/g'`
  pattern=`wget -q -O- $NOAAURL/$DECODED/$AIRPORT.TXT`
  if [ "$pattern" == "" ]; then
    echo "$ERROR"
    exit 1
  else
    wget -q -O- $NOAAURL/$DECODED/$AIRPORT.TXT
  fi


elif [ "$1" == "-r" ] || [ "$1" == "--raw" ] && [ ! -z "$2" ]; then
  AIRPORT=`echo "$2" | sed 's/[[:lower:]]/\u&/g'`
  pattern=`wget -q -O- $NOAAURL/$STATION/$AIRPORT.TXT`
  if [ "$pattern" == "" ]; then
    echo "$ERROR"
    exit 1
  else
    wget -q -O- $NOAAURL/$STATION/$AIRPORT.TXT | grep $AIRPORT
  fi


elif [ "$1" == "-T" ] || [ "$1" == "--trend" ] && [ ! -z "$2" ]; then
  AIRPORT=`echo "$2" | sed 's/[[:lower:]]/\u&/g'`
  pattern=`wget -q -O- $NOAAURL/$TREND/$AIRPORT.TREND`
  if [ "$pattern" == "" ]; then
    echo "$ERROR"
    exit 1
  else
    wget -q -O- $NOAAURL/$TREND/$AIRPORT.TREND
  fi


elif [ "$1" == "-t" ] || [ "$1" == "--temp" ] && [ ! -z "$2" ]; then
  AIRPORT=`echo "$2" | sed 's/[[:lower:]]/\u&/g'`
  pattern=`wget -q -O- $NOAAURL/$DECODED/$AIRPORT.TXT`
  if [ "$pattern" == "" ]; then
    echo "$ERROR"
    exit 1
  else
    wget -q -O- $NOAAURL/$DECODED/$AIRPORT.TXT | awk -F" " '/Temperature/ {print $4}' | sed 's/(//g'
  fi


elif [ "$1" == "-d" ] || [ "$1" == "--decode" ] && [ ! -z "$2" ]; then
  AIRPORT=`echo "$2" | sed 's/[[:lower:]]/\u&/g'`
  pattern=`wget -q -O- $NOAAURL/$DECODED/$AIRPORT.TXT`

  if [ "$pattern" == "" ]; then
    echo "$ERROR"
    exit 1
  else
  # start=`date +%s`
    wget -q -O /tmp/$AIRPORT.TXT $NOAAURL/$DECODED/$AIRPORT.TXT
    d="cat /tmp/$AIRPORT.TXT"
    station=`exec $d | sed -n "1p" | cut -d "(" -f1`
    mdate=`exec $d | sed -n "2p" | awk -F"-" '{print $1}'`
    mtime=`exec $d | sed -n "2p" | awk -F"/" '{print $2}' | awk -F" " '{print $2}' | sed 's/^\(..\)/\1:/'`
    wind_d=`exec $d | sed -n "3p" | sed 's/(//g' | sed 's/)//g' | awk -F" " '{print $5 "° (" $4 ")"}' | sed 's/^[0]*//'`
    wind_s=`exec $d | sed -n "3p" | awk -F" " '{a=($8*0.44704); print a}'`
    wind_g=`exec $d | sed -n "3p" | awk -F" " '{a=($14*0.44704); print a}'`
    visib=`exec $d | awk -F":" '/Visibility/ {print $2}' | grep -E -o "[0-9]+" | awk '{a=$1*1.60934; print a}'`
    temp=`exec $d | awk -F" " '/Temperature/ {print $4}' | sed 's/(//g'`
    dew_p=`exec $d | awk -F" " '/Dew/ {print $5}' | sed 's/(//g'`
    pres=`exec $d | awk -F" " '/Pressure/ {print $6}' | sed 's/(//g' | awk '{a=$1*0.750062; print a}'`
    humi=`exec $d | awk -F" " '/Humidity/ {print $3}'`
    cloud=`exec $d | awk -F" " '/Sky/ {print $3 " " $4}'`
    weath=`exec $d | awk -F" " '/Weather/ {print $2 " " $3}'`
    rm -f /tmp/$AIRPORT.TXT

    [ "$station" == "" ] && statiom="$NODATA"
    [ "$mdate" == "" ] && mdate="$ZERO"
    [ "$mtime" == "" ] && mtime="00:00"
    [ "$wind_d" == "" ] && wind_d="$ZERO (N)"
    [ "$wind_s" == "0" ] && wind_s="$NODATA"
    [ "$wind_g" == "0" ] && wind_g="$NODATA"
    [ "$visib" == "" ] && visib="$ZERO"
    [ "$temp" == "" ] && temp="$ZERO"
    [ "$dew_p" == "" ] && dew_p="$ZERO"
    [ "$pres" == "" ] && pres="$ZERO"
    [ "$humi" == "" ] && humi="$ZERO%"
    [ "$cloud" == "" ] && cloud="$NODATA"
    [ "$weath" == "" ] && weath="$NODATA"

    printf "$NAME pattern ($AIRPORT) in $W_BASE data.\n"
    printf "Station       : %s \n"         "$station"
    printf "Day           : %s \n"         "$mdate"
    printf "Time          : %s UTC \n"     "$mtime"
    printf "Wind direction: %s \n"         "$wind_d"
    printf "Wind speed    : %.3s m/s \n"   "$wind_s"
    printf "Wind gust     : %.3s m/s \n"   "$wind_g"
    printf "Visibility    : %.4s km \n"    "$visib"
    printf "Temperature   : %s °C \n"      "$temp"
    printf "Dewpoint      : %s °C \n"      "$dew_p"
    printf "Pressure      : %.3s mm Hg \n" "$pres"
    printf "Humidity      : %s \n"         "$humi"
    printf "Clouds        : %s \n"         "$cloud"
    printf "Weather       : %s \n"         "$weath"

  # eсho "Load time $[`date +%s` - $start ] s."
  fi


else
  $HELP
  exit 1
fi
